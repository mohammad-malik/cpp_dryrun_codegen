
=== 2025-02-08 16:51:07 ===
Success: True

CODE:
// Question #1
#include <iostream>
using namespace std;
int main() {
    int arr[] = {10, 20, 30, 40, 50};
    int *ptr = arr + 3;
    cout << ptr[-2] << endl;
    cout << *(ptr - 1) << endl;
    ptr -= 3;
    cout << *ptr++ << endl;
    cout << *ptr << endl;
    return 0;
}



OUTPUT:
20
30
10
20

==================================================

=== 2025-02-08 16:51:08 ===
Success: True

CODE:
// Question #3
#include <iostream>
using namespace std;
int main() {
    int arr[5];
    int *ptr = arr;
    cout << sizeof(arr) << endl;
    cout << sizeof(ptr) << endl;
    cout << sizeof(*ptr) << endl;
    cout << sizeof(arr + 1) << endl;
    return 0;
}



OUTPUT:
20
8
4
8

==================================================

=== 2025-02-08 16:51:08 ===
Success: True

CODE:
// Question #2
#include <iostream>
using namespace std;
void modify(int *x, int& y) {
    *x = 15;
    y = *x + 5;
    x = &y;
    *x = 30;
}
int main() {
    int a = 10;
    int b = 20;
    int *ptr_a = &a;
    modify(ptr_a, b);
    cout << a << " " << b << endl;
    return 0;
}



OUTPUT:
15 30

==================================================

=== 2025-02-08 16:51:09 ===
Success: True

CODE:
// Question #4
#include <iostream>
using namespace std;
int main() {
    int arr[] = {1, 2, 3, 4, 5};
    int *ptr = arr + 4;
    for (int i = 0; i < 5; i++) {
        cout << *ptr << " ";
        ptr--;
        if (i == 2) {
           ptr -= 2;
           i++;
        }
    }
    cout << endl;
    return 0;
}



OUTPUT:
5 4 3 65535

==================================================

=== 2025-02-08 16:51:16 ===
Success: True

CODE:
// Question #5
#include <iostream>
using namespace std;
int main() {
    int x = 5;
    int y = 10;
    if (x = y--) {
        cout << "Inside if " << x << " " << y << endl;
    } else {
        cout << "Inside else " << x << " " << y << endl;
    }
    cout << x << " " << y << endl;
    return 0;
}



OUTPUT:
Inside if 10 9
10 9

==================================================

=== 2025-02-08 16:51:17 ===
Success: True

CODE:
// Question #7
#include <iostream>
using namespace std;
int* allocateArray(int size) {
    int *arr = new int[size];
    for (int i = 0; i < size; ++i) {
        arr[i] = i * 2;
    }
    return arr + 1;
}
int main() {
    int *myArray = allocateArray(5);
    cout << myArray[0] << endl;
    cout << myArray[3] << endl;
    delete[] (myArray - 1);
    return 0;
}



OUTPUT:
2
8

==================================================

=== 2025-02-08 16:51:22 ===
Success: True

CODE:
// Question #6
#include <iostream>
using namespace std;
int main() {
    unsigned int a = 5;
    int b = -3;
    cout << (a & b) << endl;
    cout << (a | b) << endl;
    cout << (a ^ b) << endl;
    cout << (a >> 1) << endl;
    cout << (b << 1) << endl;
    return 0;
}



OUTPUT:
5
4294967293
4294967288
2
-6

==================================================

=== 2025-02-08 16:51:25 ===
Success: True

CODE:
// Question #9
#include <iostream>
using namespace std;
int main() {
    int a = 1, b = 2, c = 3;
    int *ptr_arr[] = {&a, &b, &c};
    int (*arr_ptr)[3];
    int normal_arr[3] = {4, 5, 6};
    arr_ptr = &normal_arr;

    cout << **ptr_arr << endl;
    cout << *ptr_arr[1] << endl;
    cout << (*arr_ptr)[2] << endl;
    return 0;
}



OUTPUT:
1
2
6

==================================================

=== 2025-02-08 16:51:26 ===
Success: False

CODE:
// Question #10
#include <iostream>
using namespace std;
int* myFunction() {
    int localVar = 100;
    return &localVar;
}
int main() {
    int *danglingPtr = myFunction();
    cout << *danglingPtr << endl;
    *danglingPtr = 200;
    cout << *danglingPtr << endl;
    return 0;
}

OUTPUT:
Program execution failed: /tmp/program.cpp: In function 'int* myFunction()':
/tmp/program.cpp:6:12: warning: address of local variable 'localVar' returned [-Wreturn-local-addr]
    6 |     return &localVar;
      |            ^~~~~~~~~
/tmp/program.cpp:5:9: note: declared here
    5 |     int localVar = 100;
      |         ^~~~~~~~
Segmentation fault

==================================================

=== 2025-02-08 16:51:41 ===
Success: True

CODE:
// Question #8
#include <iostream>
using namespace std;
int main() {
    int x = 2;
    int *ptr = &x;
    int y = (++x) + (*ptr)++;
    cout << x << " " << y << endl;
    y = (++(*ptr)) + x++;
    cout << x << " " << y << endl;
    return 0;
}



OUTPUT:
4 6
6 10

==================================================
